{"ast":null,"code":"var _jsxFileName = \"/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/RecentActivities/RecentActivities.js\";\nimport './RecentActivities.css';\nimport date from 'date-and-time';\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecentActivities = props => {\n  const now = new Date();\n  const pattern = date.compile('MMMM DD'); // function timeDifference(date1,date2) {\n  //     let difference = date1.getTime() - date2.getTime();\n  //\n  //     let hoursDifference = Math.floor(difference/1000/60/60);\n  //     difference -= hoursDifference*1000*60*60\n  //\n  //     let minutesDifference = Math.floor(difference/1000/60);\n  //     difference -= minutesDifference*1000*60\n  //\n  //     let secondsDifference = Math.floor(difference/1000);\n  //\n  //     console.log('difference = ' +\n  //         daysDifference + ' day/s ' +\n  //         hoursDifference + ' hour/s ' +\n  //         minutesDifference + ' minute/s ' +\n  //         secondsDifference + ' second/s ');\n  // }\n  //\n  // timeDifference();\n\n  let durationTime = props.data.map(e => {\n    let hours = Math.floor((+e.finish_time - +e.start_time) / 1000 / 60 / 60); // return ((+e.finish_time) - (+e.start_time))/60;\n\n    let minutes = Math.floor((+e.finish_time - +e.start_time) / 1000 / 60);\n    return hours + ' h ' + minutes + ' min ';\n  });\n  console.log(durationTime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"activities-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity\",\n      children: props.data ? [...props.data].reverse().map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: date.format(now, pattern)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", e.activity, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", e.distance + ' km', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", moment(+e.finish_time - +e.start_time).format(\"HH:mm\"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RecentActivities;\nexport default RecentActivities;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentActivities\");","map":{"version":3,"sources":["/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/RecentActivities/RecentActivities.js"],"names":["date","moment","RecentActivities","props","now","Date","pattern","compile","durationTime","data","map","e","hours","Math","floor","finish_time","start_time","minutes","console","log","reverse","format","activity","distance"],"mappings":";AAAA,OAAO,wBAAP;AACA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMC,OAAO,GAAGN,IAAI,CAACO,OAAL,CAAa,SAAb,CAAhB,CAFgC,CAIhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIC,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAWC,GAAX,CAAeC,CAAC,IAAI;AACnC,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,CAACH,CAAC,CAACI,WAAH,GAAiB,CAACJ,CAAC,CAACK,UAArB,IAAiC,IAAjC,GAAsC,EAAtC,GAAyC,EAApD,CAAZ,CADmC,CAEhC;;AACH,QAAIC,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAW,CAAC,CAACH,CAAC,CAACI,WAAH,GAAiB,CAACJ,CAAC,CAACK,UAArB,IAAiC,IAAjC,GAAsC,EAAjD,CAAd;AAEA,WAAOJ,KAAK,GAAG,KAAR,GAAgBK,OAAhB,GAA0B,OAAjC;AACC,GANc,CAAnB;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACSL,KAAK,CAACM,IAAN,GAAY,CAAC,GAAGN,KAAK,CAACM,IAAV,EAAgBW,OAAhB,GAA0BV,GAA1B,CAA8BC,CAAC,iBACxC;AAAA,gCACI;AAAA,oBAAIX,IAAI,CAACqB,MAAL,CAAYjB,GAAZ,EAAiBE,OAAjB;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,0BAAKK,CAAC,CAACW,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,0BAAKX,CAAC,CAACY,QAAF,GAAa,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,0BAAKtB,MAAM,CAAE,CAACU,CAAC,CAACI,WAAJ,GAAoB,CAACJ,CAAC,CAACK,UAAxB,CAAN,CAA2CK,MAA3C,CAAkD,OAAlD,CAAL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,CAAZ,GAQG;AATZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjDD;;KAAMnB,gB;AAmDN,eAAeA,gBAAf","sourcesContent":["import './RecentActivities.css'\nimport date from 'date-and-time';\nimport moment from \"moment\";\n\nconst RecentActivities = (props) => {\n    const now = new Date();\n    const pattern = date.compile('MMMM DD');\n\n    // function timeDifference(date1,date2) {\n    //     let difference = date1.getTime() - date2.getTime();\n    //\n    //     let hoursDifference = Math.floor(difference/1000/60/60);\n    //     difference -= hoursDifference*1000*60*60\n    //\n    //     let minutesDifference = Math.floor(difference/1000/60);\n    //     difference -= minutesDifference*1000*60\n    //\n    //     let secondsDifference = Math.floor(difference/1000);\n    //\n    //     console.log('difference = ' +\n    //         daysDifference + ' day/s ' +\n    //         hoursDifference + ' hour/s ' +\n    //         minutesDifference + ' minute/s ' +\n    //         secondsDifference + ' second/s ');\n    // }\n    //\n    // timeDifference();\n    let durationTime = props.data.map(e => {\n        let hours = Math.floor((+e.finish_time - +e.start_time)/1000/60/60);\n           // return ((+e.finish_time) - (+e.start_time))/60;\n        let minutes = Math.floor((+e.finish_time - +e.start_time)/1000/60);\n\n        return hours + ' h ' + minutes + ' min ';\n        }\n    )\n\n    console.log(durationTime);\n\n    return (\n        <div className=\"activities-container\">\n            <div className=\"activity\">\n                    {props.data ?[...props.data].reverse().map(e =>\n                        <div>\n                            <p>{date.format(now, pattern)}</p>\n                            <p> {e.activity} </p>\n                            <p> {e.distance + ' km'} </p>\n                            <p> {moment((+e.finish_time) - (+e.start_time)).format(\"HH:mm\")} </p>\n                            <p> {} </p>\n                        </div>\n                    ) : null}\n            </div>\n        </div>\n    )\n}\n\nexport default RecentActivities;"]},"metadata":{},"sourceType":"module"}