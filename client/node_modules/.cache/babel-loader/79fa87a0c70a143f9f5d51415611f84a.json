{"ast":null,"code":"var _jsxFileName = \"/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport './DataPicker.css';\nimport './Form.css';\nimport eu from '....node_modules/date-fns/locale/eu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nregisterLocale('eu', eu);\n\nconst Form = props => {\n  _s();\n\n  const [form, setForm] = useState({});\n  const [startDate, setStartDate] = useState(new Date());\n  const [finishDate, setFinishDate] = useState(new Date());\n  const inputDistRef = useRef();\n  const selectRef = useRef();\n\n  const changeHandler = e => {\n    setForm({ ...form,\n      [e.target.getAttribute(\"name\")]: e.target.value\n    });\n  };\n\n  const dropHandler = e => {\n    setForm({ ...form,\n      activity: e.target.value\n    });\n  };\n\n  const startPickerHandler = date => {\n    setStartDate(date);\n    setForm({ ...form,\n      startDate: +date\n    });\n  };\n\n  const finishPickerHandler = date => {\n    setFinishDate(date);\n    setForm({ ...form,\n      finishDate: +date\n    });\n  };\n\n  function setData() {\n    if (form.distance != null && form.activity !== undefined) {\n      axios.post('http://localhost:3006/', form).then(() => props.onUpdate());\n      inputDistRef.current.value = \"\";\n      selectRef.current.value = \"Select activity type\";\n    } else {\n      alert(\"Please fill in all fields\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Activity Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-activity\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add new activity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          locale: \"eu\",\n          name: \"startDate\",\n          selected: startDate,\n          onChange: startPickerHandler,\n          showTimeSelect: true,\n          showTimeSelectOnly: true,\n          timeIntervals: 15,\n          timeCaption: \"Time\",\n          dateFormat: \"HH:mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          name: \"startDate\",\n          selected: finishDate,\n          onChange: finishPickerHandler,\n          showTimeSelect: true,\n          showTimeSelectOnly: true,\n          timeIntervals: 15,\n          timeCaption: \"Time\",\n          dateFormat: \"HH:mm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputDistRef,\n          name: \"distance\",\n          onChange: changeHandler,\n          type: \"text\",\n          placeholder: \"Distance\",\n          className: \"distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: selectRef,\n          onChange: dropHandler,\n          placeholder: \"Select\",\n          className: \"activity-type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            disabled: true,\n            children: \"Select activity type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Run\",\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ride\",\n            children: \"Ride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setData,\n          className: \"save\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"2Bv7CXUM+9y7Wfqbf82Cm01YKmI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/Form/Form.js"],"names":["useRef","useState","axios","DatePicker","registerLocale","eu","Form","props","form","setForm","startDate","setStartDate","Date","finishDate","setFinishDate","inputDistRef","selectRef","changeHandler","e","target","getAttribute","value","dropHandler","activity","startPickerHandler","date","finishPickerHandler","setData","distance","undefined","post","then","onUpdate","current","alert"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\nimport axios from 'axios';\nimport DatePicker, {registerLocale} from \"react-datepicker\";\nimport './DataPicker.css';\nimport './Form.css';\nimport eu from '....node_modules/date-fns/locale/eu';\nregisterLocale('eu', eu)\n\nconst Form = (props) => {\n    const [form, setForm] = useState({});\n    const [startDate, setStartDate] = useState(new Date());\n    const [finishDate, setFinishDate] = useState(new Date());\n\n    const inputDistRef = useRef();\n    const selectRef = useRef();\n\n\n    const changeHandler = (e) => {\n        setForm({...form, [e.target.getAttribute(\"name\")]: e.target.value});\n    }\n\n    const dropHandler = (e) => {\n      setForm({...form, activity: e.target.value})\n    }\n\n    const startPickerHandler = (date) => {\n        setStartDate(date);\n        setForm({...form, startDate: +date})\n    }\n    const finishPickerHandler = (date) => {\n        setFinishDate(date);\n        setForm({...form, finishDate: +date})\n    }\n\n    function setData() {\n\n       if (form.distance != null && form.activity !== undefined ) {\n           axios.post('http://localhost:3006/', form).then(()=>props.onUpdate())\n           inputDistRef.current.value = \"\";\n           selectRef.current.value = \"Select activity type\";\n\n       }else {\n           alert(\"Please fill in all fields\");\n       }\n\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1>Activity Tracker</h1>\n                </div>\n\n                <div className=\"add-activity\">\n                    <p>Add new activity:</p>\n                    <DatePicker\n                        locale=\"eu\"\n                        name=\"startDate\"\n                        selected={startDate}\n                        onChange={startPickerHandler}\n                        showTimeSelect\n                        showTimeSelectOnly\n                        timeIntervals={15}\n                        timeCaption=\"Time\"\n                        dateFormat=\"HH:mm\"\n                    />\n                    <DatePicker\n                        name=\"startDate\"\n                        selected={finishDate}\n                        onChange={finishPickerHandler}\n                        showTimeSelect\n                        showTimeSelectOnly\n                        timeIntervals={15}\n                        timeCaption=\"Time\"\n                        dateFormat=\"HH:mm\"\n                    />\n                    {/*<input*/}\n                    {/*    ref={inputStartRef}*/}\n                    {/*    name = \"start\"*/}\n                    {/*    onChange={changeHandler}*/}\n                    {/*    type=\"text\"*/}\n                    {/*    placeholder = \"Start time\"*/}\n                    {/*    className = \"start-time\"*/}\n                    {/*/>*/}\n                    {/*<input*/}\n                    {/*    ref={inputFinishRef}*/}\n                    {/*    name = \"finish\"*/}\n                    {/*    onChange={changeHandler}*/}\n                    {/*    type = \"text\"*/}\n                    {/*    placeholder = \"Finish time\"*/}\n                    {/*    className = \"finish-time\"*/}\n                    {/*/>*/}\n                    <input\n                        ref={inputDistRef}\n                        name = \"distance\"\n                        onChange = {changeHandler}\n                        type = \"text\"\n                        placeholder = \"Distance\"\n                        className = \"distance\"\n                    />\n                    <select ref={selectRef} onChange={dropHandler} placeholder=\"Select\" className=\"activity-type\">\n                        <option selected disabled>Select activity type</option>\n                        <option value=\"Run\">Run</option>\n                        <option value=\"Ride\">Ride</option>\n                    </select>\n                    <button onClick={setData} className=\"save\">Save</button>\n                </div>\n\n            </div>\n        </>\n    )\n\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}