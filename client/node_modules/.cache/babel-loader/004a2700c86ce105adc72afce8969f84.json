{"ast":null,"code":"var _jsxFileName = \"/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport './DataPicker.css';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = props => {\n  _s();\n\n  const [form, setForm] = useState({});\n  const [startDate, setStartDate] = useState(new Date());\n  const [finishDate, setFinishDate] = useState(new Date());\n  const inputStartRef = useRef();\n  const inputFinishRef = useRef();\n  const inputDistRef = useRef();\n  const selectRef = useRef();\n\n  const changeHandler = e => {\n    setForm({ ...form,\n      [e.target.getAttribute(\"name\")]: e.target.value\n    });\n  };\n\n  const dropHandler = e => {\n    setForm({ ...form,\n      activity: e.target.value\n    });\n  }; // const pickerHandler = (e, date) => {\n  //     setStartDate(date);\n  //     console.log(e)\n  //     console.log(date)\n  //     setForm({...form, Date: e.target.value})\n  // }\n\n\n  const startPickerHandler = date => {\n    setStartDate(date);\n    setForm({ ...form,\n      startDate: +date\n    });\n  };\n\n  const pickerHandler = date => {\n    setFinishDate(date);\n    setForm({ ...form,\n      finishDate: +date\n    });\n  };\n  /*\n      1. Записую в хендлери startData\n      2. Відправляю з App.js на сервер в базу (axios, form onUpdate - getData)\n      3. з сервера витягую роутом з бази і відправляю на фронт\n      4. дані фільтрую через map ()\n  \n  */\n\n\n  function setData() {\n    console.log(form.start);\n\n    if (form.start != null && form.distance != null && form.finish != null && form.activity != null) {\n      axios.post('http://localhost:3006/', form).then(() => props.onUpdate());\n      inputStartRef.current.value = \"\";\n      inputFinishRef.current.value = \"\";\n      inputDistRef.current.value = \"\";\n      selectRef.current.value = \"Select activity type\";\n      console.log(form);\n    } else {\n      alert(\"Please fill in all fields\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Activity Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-activity\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add new activity:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          name: \"startDate\",\n          selected: startDate,\n          onChange: startPickerHandler,\n          showTimeSelect: true,\n          showTimeSelectOnly: true,\n          timeIntervals: 15,\n          timeCaption: \"Time\",\n          dateFormat: \"h:mm aa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          name: \"startDate\",\n          selected: finishDate,\n          onChange: pickerHandler,\n          showTimeSelect: true,\n          showTimeSelectOnly: true,\n          timeIntervals: 15,\n          timeCaption: \"Time\",\n          dateFormat: \"h:mm aa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputDistRef,\n          name: \"distance\",\n          onChange: changeHandler,\n          type: \"text\",\n          placeholder: \"Distance\",\n          className: \"distance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: selectRef,\n          onChange: dropHandler,\n          placeholder: \"Select\",\n          className: \"activity-type\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            disabled: true,\n            children: \"Select activity type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Run\",\n            children: \"Run\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ride\",\n            children: \"Ride\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: setData,\n          className: \"save\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Form, \"IFHhKxu76+aYurrPC84c5jBA6os=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/Form/Form.js"],"names":["useRef","useState","axios","DatePicker","Form","props","form","setForm","startDate","setStartDate","Date","finishDate","setFinishDate","inputStartRef","inputFinishRef","inputDistRef","selectRef","changeHandler","e","target","getAttribute","value","dropHandler","activity","startPickerHandler","date","pickerHandler","setData","console","log","start","distance","finish","post","then","onUpdate","current","alert"],"mappings":"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","sourcesContent":["import {useRef, useState} from 'react';\nimport axios from 'axios';\nimport DatePicker from \"react-datepicker\";\nimport './DataPicker.css';\nimport './Form.css';\n\n\nconst Form = (props) => {\n    const [form, setForm] = useState({});\n    const [startDate, setStartDate] = useState(new Date());\n    const [finishDate, setFinishDate] = useState(new Date());\n\n    const inputStartRef = useRef();\n    const inputFinishRef = useRef();\n    const inputDistRef = useRef();\n    const selectRef = useRef();\n\n\n    const changeHandler = (e) => {\n        setForm({...form, [e.target.getAttribute(\"name\")]: e.target.value});\n    }\n\n    const dropHandler = (e) => {\n      setForm({...form, activity: e.target.value})\n    }\n\n    // const pickerHandler = (e, date) => {\n    //     setStartDate(date);\n    //     console.log(e)\n    //     console.log(date)\n    //     setForm({...form, Date: e.target.value})\n    // }\n\n    const startPickerHandler = (date) => {\n        setStartDate(date);\n        setForm({...form, startDate: +date})\n    }\n    const pickerHandler = (date) => {\n        setFinishDate(date);\n        setForm({...form, finishDate: +date})\n    }\n/*\n    1. Записую в хендлери startData\n    2. Відправляю з App.js на сервер в базу (axios, form onUpdate - getData)\n    3. з сервера витягую роутом з бази і відправляю на фронт\n    4. дані фільтрую через map ()\n\n*/\n\n\n    function setData() {\n\n        console.log(form.start);\n       if (form.start != null && form.distance != null && form.finish != null && form.activity != null ) {\n           axios.post('http://localhost:3006/', form).then(()=>props.onUpdate())\n           inputStartRef.current.value = \"\";\n           inputFinishRef.current.value = \"\";\n           inputDistRef.current.value = \"\";\n           selectRef.current.value = \"Select activity type\";\nconsole.log(form)\n       }else {\n           alert(\"Please fill in all fields\");\n       }\n\n    }\n\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"header\">\n                    <h1>Activity Tracker</h1>\n                </div>\n\n                <div className=\"add-activity\">\n                    <p>Add new activity:</p>\n                    <DatePicker\n                        name=\"startDate\"\n                        selected={startDate}\n                        onChange={startPickerHandler}\n                        showTimeSelect\n                        showTimeSelectOnly\n                        timeIntervals={15}\n                        timeCaption=\"Time\"\n                        dateFormat=\"h:mm aa\"\n                    />\n                    <DatePicker\n                        name=\"startDate\"\n                        selected={finishDate}\n                        onChange={pickerHandler}\n                        showTimeSelect\n                        showTimeSelectOnly\n                        timeIntervals={15}\n                        timeCaption=\"Time\"\n                        dateFormat=\"h:mm aa\"\n                    />\n                    {/*<input*/}\n                    {/*    ref={inputStartRef}*/}\n                    {/*    name = \"start\"*/}\n                    {/*    onChange={changeHandler}*/}\n                    {/*    type=\"text\"*/}\n                    {/*    placeholder = \"Start time\"*/}\n                    {/*    className = \"start-time\"*/}\n                    {/*/>*/}\n                    {/*<input*/}\n                    {/*    ref={inputFinishRef}*/}\n                    {/*    name = \"finish\"*/}\n                    {/*    onChange={changeHandler}*/}\n                    {/*    type = \"text\"*/}\n                    {/*    placeholder = \"Finish time\"*/}\n                    {/*    className = \"finish-time\"*/}\n                    {/*/>*/}\n                    <input\n                        ref={inputDistRef}\n                        name = \"distance\"\n                        onChange = {changeHandler}\n                        type = \"text\"\n                        placeholder = \"Distance\"\n                        className = \"distance\"\n                    />\n                    <select ref={selectRef} onChange={dropHandler} placeholder=\"Select\" className=\"activity-type\">\n                        <option selected disabled>Select activity type</option>\n                        <option value=\"Run\">Run</option>\n                        <option value=\"Ride\">Ride</option>\n                    </select>\n                    <button onClick={setData} className=\"save\">Save</button>\n                </div>\n\n            </div>\n        </>\n    )\n\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}