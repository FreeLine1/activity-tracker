{"ast":null,"code":"var _jsxFileName = \"/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/Records/Records.js\";\nimport './Records.css';\nimport date from \"date-and-time\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Records = props => {\n  // console.log(props.data.durationRide.finish_time);\n  const x = () => {\n    if (props.data.durationRide) {\n      let difference = +props.data.durationRide.finish_time - +props.data.durationRide.start_time; // /360000\n\n      let differenceRun = +props.data.durationRun.finish_time - +props.data.durationRun.start_time;\n      let hours = Math.floor(difference / 1000 / 60 / 60);\n      difference -= hours * 1000 * 60 * 60;\n      let hoursRun = Math.floor(differenceRun / 1000 / 60 / 60);\n      differenceRun -= hoursRun * 1000 * 60 * 60;\n      let minutes = Math.floor(difference / 1000 / 60);\n      difference -= minutes * 1000 * 60;\n      let minutesRun = Math.floor(differenceRun / 1000 / 60);\n      differenceRun -= minutesRun * 1000 * 60;\n      let longestRide = [hours + ' h ' + minutes + ' min '];\n      let longestRun = [hoursRun + ' h ' + minutesRun + ' min '];\n      return longestRide;\n    } else console.log('LOX');\n  }; // }\n\n\n  const now = new Date();\n  const pattern = date.compile('MMM DD');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"records-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        \"text-align\": \"center\"\n      },\n      children: \"Longest ride:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"records-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: date.format(now, pattern)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.data.distanceRide ? props.data.distanceRide[0].distance + \" km \" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        \"text-align\": \"center\"\n      },\n      children: \"Longest run:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"records-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: date.format(now, pattern)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.data.distanceRun ? props.data.distanceRun[0].distance + \" km \" : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Records;\nexport default Records;\n\nvar _c;\n\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"sources":["/Users/maxym/Udemy&other/activity-tracker/wise-tracker/tracker/client/src/components/Records/Records.js"],"names":["date","Records","props","x","data","durationRide","difference","finish_time","start_time","differenceRun","durationRun","hours","Math","floor","hoursRun","minutes","minutesRun","longestRide","longestRun","console","log","now","Date","pattern","compile","format","distanceRide","distance","distanceRun"],"mappings":"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","sourcesContent":["import './Records.css';\nimport date from \"date-and-time\";\n\nconst Records = (props) => {\n     // console.log(props.data.durationRide.finish_time);\n\nconst x = () => {\n    if (props.data.durationRide){\n        let difference = +props.data.durationRide.finish_time - +props.data.durationRide.start_time; // /360000\n        let differenceRun = +props.data.durationRun.finish_time - +props.data.durationRun.start_time;\n\n        let hours = Math.floor(difference / 1000 / 60 / 60);\n        difference -= hours * 1000 * 60 * 60;\n\n        let hoursRun = Math.floor(differenceRun / 1000 / 60 / 60);\n        differenceRun -= hoursRun * 1000 * 60 * 60;\n\n        let minutes = Math.floor(difference / 1000 / 60);\n        difference -= minutes * 1000 * 60;\n\n        let minutesRun = Math.floor(differenceRun / 1000 / 60);\n        differenceRun -= minutesRun * 1000 * 60;\n\n        let longestRide = [hours + ' h ' + minutes + ' min '];\n        let longestRun = [hoursRun + ' h ' + minutesRun + ' min '];\n\n       return longestRide;\n    } else console.log('LOX')\n}\n\n\n\n        // }\n\n\n    const now = new Date();\n    const pattern = date.compile('MMM DD');\n    return (\n        <div className=\"records-container\">\n            <p style={{\"text-align\": \"center\"}}>Longest ride:</p>\n            <div className=\"records-data\">\n                <p>{date.format(now, pattern)}</p>\n                <p>{props.data.distanceRide ? props.data.distanceRide[0].distance + \" km \" : null}</p>\n                <p>{x}</p>\n            </div>\n            <p style={{\"text-align\": \"center\"}}>Longest run:</p>\n            <div className=\"records-data\">\n                <p>{date.format(now, pattern)}</p>\n                <p>{props.data.distanceRun ? props.data.distanceRun[0].distance + \" km \" : null}</p>\n                <p>{}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Records;"]},"metadata":{},"sourceType":"module"}